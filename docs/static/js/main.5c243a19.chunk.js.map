{"version":3,"sources":["components/AddCategory.jsx","components/GifGridItem.jsx","services/settings.js","services/getGifs.js","hooks/useGifs.js","components/GifGrid.jsx","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","evt","preventDefault","trim","length","categories","onChange","target","value","placeholder","type","GifGridItem","gif","className","src","url","alt","title","API_URL","API_KEY","fromApiResponseToGifs","apiResponse","data","Array","isArray","map","image","images","id","downsized_medium","getGifs","category","limit","page","rating","apiURL","encodeURI","fetch","then","res","json","useGifs","gifs","loading","state","setState","useEffect","GifGrid","GifExpertApp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAkCeA,EA/BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,KAezC,OACE,sBAAMC,SATa,SAACC,GACpBA,EAAIC,iBACAJ,EAAWK,OAAOC,QAAU,IAC9BR,GAAc,SAACS,GAAD,OAAiBP,GAAjB,mBAAgCO,OAC9CN,EAAc,MAKhB,SACE,uBACEO,SAfe,SAACL,GACpBF,EAAcE,EAAIM,OAAOC,QAerBC,YAAY,YACZC,KAAK,OACLF,MAAOV,OCPAa,EAfK,SAAC,GAAa,IAAXC,EAAU,EAAVA,IACrB,OACE,qBAAKC,UAAU,yCAAf,SACE,mCACE,qBAAKC,IAAKF,EAAIG,IAAKC,IAAKJ,EAAIK,QAC5B,qCAAaL,EAAIK,cCPZC,EAAU,2BACVC,EAAU,mCCCjBC,EAAwB,SAACC,GAAiB,IAAD,EACvBA,EAAdC,YADqC,MAC9B,GAD8B,EAG7C,OAAIC,MAAMC,QAAQF,GACHA,EAAKG,KAAI,SAACC,GAAW,IACxBC,EAAsBD,EAAtBC,OAER,MAAO,CAAEV,MAFqBS,EAAdT,MAEAW,GAFcF,EAAPE,GAEHb,IADJY,EAAOE,iBAAfd,QAKL,IAkBMe,EAfC,WAKJ,IAAD,yDAAP,GAAO,IAJTC,gBAIS,MAJE,YAIF,MAHTC,aAGS,MAHD,GAGC,MAFTC,YAES,MAFF,EAEE,MADTC,cACS,MADA,IACA,EACHC,EAAM,UAAMjB,EAAN,gCAAqCC,EAArC,cAAkDiB,UAC5DL,GADU,kBAEDC,EAFC,mBAEeC,EAAOD,EAFtB,mBAEsCE,EAFtC,YAIZ,OAAOG,MAAMF,GACVG,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,KAAKlB,ICXKqB,EAbC,SAAC,GAAkB,IAAhBV,EAAe,EAAfA,SAAe,EACNlC,mBAAS,CACjC6C,KAAM,GACNC,SAAS,IAHqB,mBACzBC,EADyB,KAClBC,EADkB,KAUhC,OAJAC,qBAAU,WACRhB,EAAQ,CAAEC,aAAYO,MAAK,SAACI,GAAD,OAAUG,EAAS,CAAEH,OAAMC,SAAS,SAC9D,CAACZ,IAEGa,GCWMG,EApBC,SAAC,GAAkB,IAAhBhB,EAAe,EAAfA,SAAe,EACNU,EAAQ,CAAEV,aAA5BW,EADwB,EACxBA,KAAMC,EADkB,EAClBA,QAEd,OACE,qCACE,oBAAI9B,UAAU,oCAAd,SAAmDkB,IAClDY,GAAW,mBAAG9B,UAAU,mCAAb,qBACZ,qBAAKA,UAAU,aAAf,SACG6B,EAAKjB,KAAI,SAACb,GAAD,OACR,cAAC,EAAD,CAA0BA,IAAKA,GAAbA,EAAIgB,aCQjBoB,EAjBM,WAAO,IAAD,EACWnD,mBAAS,CAAC,mBADrB,mBAClBQ,EADkB,KACNT,EADM,KAGzB,OACE,qCACE,8CACA,uBACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACGS,EAAWoB,KAAI,SAACM,GAAD,OACd,cAAC,EAAD,CAASA,SAAUA,GAAeA,Y,MCP5CkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5c243a19.chunk.js","sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleChange = (evt) => {\n    setInputValue(evt.target.value);\n  };\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    if (inputValue.trim().length >= 2) {\n      setCategories((categories) => [inputValue, ...categories]);\n      setInputValue('');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        onChange={handleChange}\n        placeholder=\"Search...\"\n        type=\"text\"\n        value={inputValue}\n      />\n    </form>\n  );\n};\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n};\n\nexport default AddCategory;\n","import PropTypes from 'prop-types';\n\nconst GifGridItem = ({ gif }) => {\n  return (\n    <div className=\"card animate__animated animate__fadeIn\">\n      <figure>\n        <img src={gif.url} alt={gif.title} />\n        <figcaption>{gif.title}</figcaption>\n      </figure>\n    </div>\n  );\n};\n\nGifGridItem.propTypes = {\n  gif: PropTypes.object.isRequired,\n};\n\nexport default GifGridItem;\n","export const API_URL = 'https://api.giphy.com/v1';\nexport const API_KEY = 'gpUFXO3qzly0cHNaGV8lbGzqdpxklvVH';\n","import { API_KEY, API_URL } from './settings';\n\nconst fromApiResponseToGifs = (apiResponse) => {\n  const { data = [] } = apiResponse;\n\n  if (Array.isArray(data)) {\n    const gifs = data.map((image) => {\n      const { images, title, id } = image;\n      const { url } = images.downsized_medium;\n      return { title, id, url };\n    });\n    return gifs;\n  }\n  return [];\n};\n\nconst getGifs = ({\n  category = 'One Punch',\n  limit = 15,\n  page = 0,\n  rating = 'g',\n} = {}) => {\n  const apiURL = `${API_URL}/gifs/search?api_key=${API_KEY}&q=${encodeURI(\n    category\n  )}&limit=${limit}&offset=${page * limit}&rating=${rating}&lang=en`;\n\n  return fetch(apiURL)\n    .then((res) => res.json())\n    .then(fromApiResponseToGifs);\n};\n\nexport default getGifs;\n","import { useEffect, useState } from 'react';\n\nimport getGifs from 'services/getGifs';\n\nconst useGifs = ({ category }) => {\n  const [state, setState] = useState({\n    gifs: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGifs({ category }).then((gifs) => setState({ gifs, loading: false }));\n  }, [category]);\n\n  return state;\n};\n\nexport default useGifs;\n","import PropTypes from 'prop-types';\n\nimport GifGridItem from './GifGridItem';\nimport useGifs from 'hooks/useGifs';\n\nconst GifGrid = ({ category }) => {\n  const { gifs, loading } = useGifs({ category });\n\n  return (\n    <>\n      <h2 className=\"animate__animated animate__fadeIn\">{category}</h2>\n      {loading && <p className=\"animate__animated animate__flash\">loading</p>}\n      <div className=\"card__grid\">\n        {gifs.map((gif) => (\n          <GifGridItem key={gif.id} gif={gif} />\n        ))}\n      </div>\n    </>\n  );\n};\n\nGifGrid.propTypes = {\n  category: PropTypes.string.isRequired,\n};\n\nexport default GifGrid;\n","import { useState } from 'react';\n\nimport AddCategory from 'components/AddCategory';\nimport GifGrid from 'components/GifGrid';\n\nconst GifExpertApp = () => {\n  const [categories, setCategories] = useState(['Rick and Morty']);\n\n  return (\n    <>\n      <h1>GifExpertApp</h1>\n      <hr />\n      <AddCategory setCategories={setCategories} />\n      <ol>\n        {categories.map((category) => (\n          <GifGrid category={category} key={category} />\n        ))}\n      </ol>\n    </>\n  );\n};\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'animate.css';\n\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}